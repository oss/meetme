version: '3'

services:
  nginx:
    image: nginx-oss-meetme
    ports:
      - 80:80
      - 443:443
    networks:
      - no-internet
      - authnet
    depends_on:
      - saml
      - backend
      - socket
      - mongo
    deploy:
      mode: replicated
      replicas: 1

  nginx-docker:
    image: nginx-oss-docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  mongo:
    image: database-meetme
    networks:
      - no-internet
      - mongo-net
  mongo-jr:
    image: database-meetme
    networks:
      - no-internet
      - mongo-net
    depends_on:
      - mongo
  mongo-the-third:
    image: database-meetme
    networks:
      - no-internet
      - mongo-net
    depends_on:
      - mongo

  mongoinit:
    image: mongo # this container will exit after executing the command
    restart: 'no'
    depends_on:
      - mongo
      - mongo-jr
      - mongo-the-third
    networks:
      - mongo-net
    command: >
      mongosh --host mongo:27017 --eval 'rs.initiate({
          "_id" : "rs0",
          "members" : [
            {
              "_id" : 0,
              "host" : "mongo:27017",
              "priority": 5
            },
            {
              "_id" : 1,
              "host" : "mongo-jr:27017",
              "priority": 1
            },
            {
              "_id" : 2,
              "host" : "mongo-the-third:27017",
              "priority": 1
            }
          ]
        });
        '

  backend:
    image: backend-meetme
    networks:
      - no-internet
      - authnet
    depends_on:
      - mongoinit
    deploy:
      mode: replicated
      replicas: 1

  frontend:
    image: frontend-meetme-webpack
    networks:
      - no-internet
    depends_on:
      - mongoinit
    volumes:
      - ./frontend:/root
    deploy:
      mode: replicated
      replicas: 1

  socket:
    image: websocket-meetme
    networks:
      - no-internet
      - mongo-net
    deploy:
      mode: replicated
      replicas: 1

  openldap:
    image: bitnami/openldap:2
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=adminpassword
      - LDAP_USERS=netid1,netid2,netid3,netid4,netid5,netid6
      - LDAP_PASSWORDS=rutgers1,rutgers2,rutgers3,rutgers4,rutgers5,rutgers6
      - BITNAMI_DEBUG=true
    networks:
      - authnet
    volumes:
      - ./openldap_data:/bitnami/openldap
      - ./ldaptest/eduPerson.ldif:/schema/custom.ldif
      - ./ldaptest/bootstrap.ldif:/ldifs/bootstrap.ldif

  shibboleth:
    image: shibboleth-idp-meetme
    networks:
      - authnet
      - no-internet
    environment:
      - JAVA_OPTS=-Djava.security.egd=file:/dev/urandom -Xmx3000m
    ports:
      - 4443:443
    links:
      - 'backend:api.localhost.edu'
# remove saml cuz shibboleth
  saml:
    image: kristophjunge/test-saml-idp
    environment:
      - SIMPLESAMLPHP_SP_ENTITY_ID=saml-poc
      - SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=https://api.localhost.edu/login
      - SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://api.localhost.edu/logout
    networks:
      - authnet
    volumes:
      - ./saml/users.php:/var/www/simplesamlphp/config/authsources.php
  cas:
    image: cas-meetme 
    ports:
     - "8443:8443"
     - "8080:8080"
networks:
  no-internet:
    driver: overlay
    attachable: true
  authnet:
    driver: overlay
    attachable: true
  mongo-net:
    driver: overlay
    attachable: true
  socat-net:
    driver: overlay
    attachable: true
